/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jtoodle.api.test.web;

import java.awt.Component;
import java.beans.IntrospectionException;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import jtoodle.api.auth.AuthExceptionHandler;
import jtoodle.api.bean.core.Folder;
import jtoodle.api.bean.core.Task;
import jtoodle.api.bean.util.DeletionResult;
import jtoodle.api.bean.util.JToodleException;
import jtoodle.api.request.web.FolderDeletionCriteria;
import jtoodle.api.request.web.FolderOperations;
import jtoodle.api.util.NullSafe;
import org.openide.nodes.BeanNode;
import org.openide.nodes.Node;

/**
 *
 * @author Justo_Casablanca
 */
public class OthersPanel extends javax.swing.JPanel {

	private static final Logger logger = Logger.getLogger( OthersPanel.class.getName() );

	/** Creates new form OthersPanel */
	public OthersPanel() {
		initComponents();
		initComponents2();
	}

	private void initComponents2() {
		beanResultsComboBox.setRenderer( new DefaultListCellRenderer() {
			@Override
			public Component getListCellRendererComponent( JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus ) {
				if( value == null ) {
					setText( "<null value>" );
				} else if( value instanceof Folder ) {
					setText( ((Folder)value).getName() );
				} else if( value instanceof Task ) {
					setText( ((Task)value).getTitle() );
				} else {
					setText( value.toString() );
				}
				return this;
			}
		});
	}

	private void deleteFolder( Folder folder ) {
		FolderDeletionCriteria fdc = new FolderDeletionCriteria();
		fdc.setFolder( folder );

		FolderOperations folderOps = new FolderOperations();
		folderOps.setOperationCriteria( fdc );

		try {
			DeletionResult reply = folderOps.deleteSingle();
			JOptionPane.showMessageDialog( this, "Deleted folder: " + reply.getId() );
		} catch( IOException | JToodleException ex ) {
			logger.log( Level.SEVERE, null, ex );
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        beanTypeComboBox = new javax.swing.JComboBox();
        beanResultsComboBox = new javax.swing.JComboBox();
        deleteBeanButton = new javax.swing.JButton();
        beanPropertySheet = new org.openide.explorer.propertysheet.PropertySheet();

        beanTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Choose>", "Folders", "Contexts", "Goals", "Locations" }));
        beanTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beanTypeComboBoxActionPerformed(evt);
            }
        });

        beanResultsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beanResultsComboBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(deleteBeanButton, org.openide.util.NbBundle.getMessage(OthersPanel.class, "OthersPanel.deleteBeanButton.text")); // NOI18N
        deleteBeanButton.setEnabled(false);
        deleteBeanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBeanButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(beanPropertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(beanTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beanResultsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBeanButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beanResultsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beanTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBeanButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(beanPropertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void beanTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beanTypeComboBoxActionPerformed
        deleteBeanButton.setEnabled( false );
        beanResultsComboBox.removeAllItems();
        beanPropertySheet.setNodes( new Node[] {} );

        try {
            List beanList = null;

            switch( beanTypeComboBox.getSelectedItem().toString() ) {
                case "Folders": {
                    FolderOperations folderOps = new FolderOperations();
                    beanList = folderOps.search();
                    break;
                }
                case "Contexts": {
                    JOptionPane.showMessageDialog(
                        this.getRootPane(),
                        "This function is not yet available"
                    );
                    break;
                }
                case "Goals": {
                    JOptionPane.showMessageDialog(
                        this.getRootPane(),
                        "This function is not yet available"
                    );
                    break;
                }
                case "Locations": {
                    JOptionPane.showMessageDialog(
                        this.getRootPane(),
                        "This function is not yet available"
                    );
                    break;
                }
                default: {
                    break;
                }
            }

            if( !NullSafe.isNullOrEmpty( beanList ) ) {
                for( Object o: beanList ) {
                    beanResultsComboBox.addItem( o );
                }
                deleteBeanButton.setEnabled( true );
            } else {
                beanResultsComboBox.addItem(
                    "<no results for: " + beanTypeComboBox.getSelectedItem() + ">" );
                deleteBeanButton.setEnabled( false );
            }

            beanResultsComboBoxActionPerformed( null );

        } catch( IOException | JToodleException ex ) {
            logger.log( Level.SEVERE, null, ex );
            try {
                deleteBeanButton.setEnabled( false );
                beanResultsComboBox.addItem( ex );
                beanPropertySheet.setNodes( new Node[] { new BeanNode( ex ) } );
            } catch( IntrospectionException ex1 ) {
                logger.log( Level.SEVERE, null, ex1 );
            }

            if( AuthExceptionHandler.handledInvalidKey( this, ex ) ) {
                beanTypeComboBoxActionPerformed( null );
            }
        }
    }//GEN-LAST:event_beanTypeComboBoxActionPerformed

    private void beanResultsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beanResultsComboBoxActionPerformed
        try {
            if( beanResultsComboBox.getSelectedItem() == null ) {
                beanPropertySheet.setNodes( new Node[] {} );
                deleteBeanButton.setEnabled( false );
            } else {
                beanPropertySheet.setNodes( new Node[] {
                    new BeanNode( beanResultsComboBox.getSelectedItem() )
                });
                if( ! ( beanResultsComboBox.getSelectedItem() instanceof String ) ) {
                    deleteBeanButton.setEnabled( true );
                }
            }
        } catch( IntrospectionException ex ) {
            logger.log( Level.SEVERE, null, ex );
        }
    }//GEN-LAST:event_beanResultsComboBoxActionPerformed

    private void deleteBeanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBeanButtonActionPerformed
        Object bean = beanResultsComboBox.getSelectedItem();
        if( bean instanceof Folder ) {
            deleteFolder( (Folder) bean );
        } else {
            JOptionPane.showMessageDialog(
                this,
                "This function is not yet available" ,
                null,
                JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_deleteBeanButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openide.explorer.propertysheet.PropertySheet beanPropertySheet;
    private javax.swing.JComboBox beanResultsComboBox;
    private javax.swing.JComboBox beanTypeComboBox;
    private javax.swing.JButton deleteBeanButton;
    // End of variables declaration//GEN-END:variables
}
