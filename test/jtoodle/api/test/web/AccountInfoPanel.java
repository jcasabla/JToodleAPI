/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jtoodle.api.test.web;

import java.beans.IntrospectionException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import jtoodle.api.auth.AuthExceptionHandler;
import jtoodle.api.bean.core.AccountInfo;
import jtoodle.api.bean.util.JToodleException;
import jtoodle.api.json.bean.BeanWriter;
import jtoodle.api.request.web.AccountInfoOperations;
import org.openide.nodes.BeanNode;
import org.openide.nodes.Node;
import org.openide.util.Exceptions;

/**
 *
 * @author Justo_Casablanca
 */
public class AccountInfoPanel extends javax.swing.JPanel {

	private static final Logger logger = Logger.getLogger( AccountInfoPanel.class.getName() );

	private AccountInfo bean = null;

	/** Creates new form AccountInfoPanel */
	public AccountInfoPanel() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountInfoButton = new javax.swing.JButton();
        accountInfoPropertySheet = new org.openide.explorer.propertysheet.PropertySheet();
        saveToFileButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(accountInfoButton, org.openide.util.NbBundle.getMessage(AccountInfoPanel.class, "AccountInfoPanel.accountInfoButton.text")); // NOI18N
        accountInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountInfoButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(saveToFileButton, org.openide.util.NbBundle.getMessage(AccountInfoPanel.class, "AccountInfoPanel.saveToFileButton.text")); // NOI18N
        saveToFileButton.setEnabled(false);
        saveToFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(accountInfoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveToFileButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(accountInfoPropertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountInfoButton)
                    .addComponent(saveToFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(accountInfoPropertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accountInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountInfoButtonActionPerformed
        try {
            AccountInfoOperations aiOps = new AccountInfoOperations();
            bean = aiOps.searchSingle();
            accountInfoPropertySheet.setNodes( new Node[] { new BeanNode( bean ) } );
        } catch( IntrospectionException | IOException | JToodleException ex ) {
            logger.log( Level.SEVERE, null, ex );
            try {
                accountInfoPropertySheet.setNodes( new Node[] { new BeanNode( ex ) } );
            } catch( IntrospectionException ex1 ) {
                logger.log( Level.SEVERE, null, ex1 );
            }

            if( AuthExceptionHandler.handledInvalidKey( this, ex ) ) {
                accountInfoButtonActionPerformed( null );
            }
        } finally {
			saveToFileButton.setEnabled( bean != null );
		}
    }//GEN-LAST:event_accountInfoButtonActionPerformed

    private void saveToFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveToFileButtonActionPerformed
		final JFileChooser fc = new JFileChooser();
		int rv = fc.showSaveDialog( this );

		switch( rv ) {
			case JFileChooser.APPROVE_OPTION: {
				try {
					BeanWriter.writeObject( fc.getSelectedFile(), bean );
				} catch( IOException ex ) {
					Exceptions.printStackTrace( ex );
				}
				break;
			}
		}
    }//GEN-LAST:event_saveToFileButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountInfoButton;
    private org.openide.explorer.propertysheet.PropertySheet accountInfoPropertySheet;
    private javax.swing.JButton saveToFileButton;
    // End of variables declaration//GEN-END:variables
}
